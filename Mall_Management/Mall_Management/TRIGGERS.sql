--TRIGGER 1(ELEC)
CREATE TRIGGER TOTALPRICE ON ELECSALES FOR INSERT,UPDATE
AS
BEGIN
DECLARE @QTY AS INTEGER,@PRICE AS INTEGER,@TOT_PRICE AS INTEGER,@DISCOUNT AS INTEGER,@ORPRICE AS INTEGER,@PID AS INTEGER,@QUANTITY AS INTEGER
SELECT @QTY=QTY,@PRICE=PRICE ,@PID=PID FROM INSERTED
SELECT @QUANTITY=QUANTITY FROM ELECTRONICS WHERE PID=@PID
UPDATE ELECTRONICS SET QUANTITY=@QUANTITY-@QTY WHERE PID=@PID
SELECT @DISCOUNT=DISCOUNT FROM ELECTRONICS WHERE PID=@PID
SET @ORPRICE=@PRICE-(@PRICE*@DISCOUNT/100)
SET @TOT_PRICE=@QTY*@ORPRICE
UPDATE ELECSALES SET TOT_PRICE=@TOT_PRICE WHERE PID=@PID
END
INSERT INTO ELECSALES VALUES(1,'NISHA',508,'2017-07-16',2,10000,0);
INSERT INTO ELECSALES VALUES(2,'NISHA',508,'2017-07-16',2,40000,0);
INSERT INTO ELECSALES VALUES(3,'NIKITA',509,'2017-07-16',4,42000,0);
SELECT * FROM ELECSALES;
SELECT * FROM EMPLOYEE
--TRIGGER 1(COS)
CREATE TRIGGER TOTALPRICECOS ON COSSALES FOR INSERT,UPDATE
AS
BEGIN
DECLARE @QTY AS INTEGER,@PRICE AS INTEGER,@TOT_PRICE AS INTEGER,@DISCOUNT AS INTEGER,@ORPRICE AS INTEGER,@PID AS INTEGER,@QUANTITY AS INTEGER
SELECT @QTY=QTY,@PRICE=PRICE ,@PID=PID FROM INSERTED
SELECT @QUANTITY=QUANTITY FROM COSMETIC WHERE PID=@PID
UPDATE COSMETIC SET QUANTITY=@QUANTITY-@QTY WHERE PID=@PID
SELECT @DISCOUNT=DISCOUNT FROM COSMETIC WHERE PID=@PID
SET @ORPRICE=@PRICE-(@PRICE*@DISCOUNT/100)
SET @TOT_PRICE=@QTY*@ORPRICE
UPDATE COSSALES SET TOT_PRICE=@TOT_PRICE WHERE PID=@PID
END

--TRIGGER 1(CLOTH)
CREATE TRIGGER TOTALPRICECLOTH ON CLOTHSALES FOR INSERT,UPDATE
AS
BEGIN
DECLARE @QTY AS INTEGER,@PRICE AS INTEGER,@TOT_PRICE AS INTEGER,@DISCOUNT AS INTEGER,@ORPRICE AS INTEGER,@PID AS INTEGER,@QUANTITY AS INTEGER
SELECT @QTY=QTY,@PRICE=PRICE ,@PID=PID FROM INSERTED
SELECT @QUANTITY=QUANTITY FROM CLOTHING WHERE PID=@PID
UPDATE CLOTHING SET QUANTITY=@QUANTITY-@QTY WHERE PID=@PID
SELECT @DISCOUNT=DISCOUNT FROM CLOTHING WHERE PID=@PID
SET @ORPRICE=@PRICE-(@PRICE*@DISCOUNT/100)
SET @TOT_PRICE=@QTY*@ORPRICE
UPDATE CLOTHSALES SET TOT_PRICE=@TOT_PRICE WHERE PID=@PID
END

--TRIGGER2
--TIRGGER TO MONITOR THE SALES OF ELECTRONIC DEPARTMENT IF ANY CUSTOMER CANCELS THE ORDER IT WILL BE AUTOMATICALLY DELETED FROM THE SALES TABLE AND UPDATED IN THE CANCELLED ORDER TABLE OF ELECTRONICS
ALTER TRIGGER CANCEL_ORDER ON ELECSALES FOR DELETE
AS
BEGIN
DECLARE @QTY AS INTEGER,@PID AS INTEGER,@CUST_NAME AS VARCHAR(30),@PRICE AS INT,@TOT_PRICE AS INT,@UID AS INT
SELECT @QTY=QTY,@PID=PID,@UID=UID,@CUST_NAME=CUST_NAME,@PRICE=PRICE,@TOT_PRICE=TOT_PRICE FROM DELETED
UPDATE ELECTRONICS SET QUANTITY=QUANTITY+@QTY WHERE PID=@PID
INSERT INTO CANCEL_ORDER_ELEC VALUES(@PID,@CUST_NAME,@UID,GETDATE(),@QTY,@PRICE,@TOT_PRICE)
END


SELECT * FROM ELECSALES
DELETE FROM ELECSALES WHERE PID=1
SELECT * FROM CANCEL_ORDER_ELEC

INSERT INTO ELECSALES VALUES()

--TRIGGER3
SELECT * FROM LOGIN
--CREATE A TRIGGER WHICH MONITORS THE PASSWORD SHOULD BE GREATER THAN 5 CHARACTERS DURING THE REGISTERATION OF A CUSTOMER
ALTER TRIGGER PASSWORD ON LOGIN FOR INSERT,UPDATE
AS
BEGIN
DECLARE @LEN AS INT
SELECT @LEN=LEN(PASSWORD) FROM INSERTED
IF(@LEN)>5
BEGIN
PRINT 'SUCCESSFULLY UPDATED'
COMMIT
END
ELSE
BEGIN
PRINT 'YOUR PASSWORD SHOULD BE GREATER THAN 5 CHARACTERS'
ROLLBACK
END
END

INSERT INTO LOGIN VALUES('RAJ','NISHA')

--ASSERTIONS
--
SELECT * FROM ELECTRONICS

CREATE ASSERTION SUMD CHECK(NOT EXISTS(SELECT * FROM ELECSALES WHERE PID=NSULL))